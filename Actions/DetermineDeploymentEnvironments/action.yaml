name: Determine Deployment Environments
author: Microsoft Corporation
inputs:
  shell:
    description: Shell in which you want to run the action (powershell or pwsh)
    required: false
    default: powershell
  getEnvironments:
    description: Specifies the pattern of the environments you want to retreive (* for all)
    required: true
  type:
    description: Type of deployment (CD, Publish or All)
    required: true
outputs:
  DeploymentEnvironmentsJson:
    description: The JSON representation of the environment that are suitable for deployment.
    value: ${{ steps.determineDeploymentEnvironments.outputs.DeploymentEnvironmentsJson }}
  UnknownEnvironment:
    description: Flag determining whether the environment is unknown
    value: ${{ steps.determineDeploymentEnvironments.outputs.UnknownEnvironment }}
  GenerateALDocArtifact:
    description: Flag determining whether to generate the ALDoc artifact
    value: ${{ steps.determineDeploymentEnvironments.outputs.GenerateALDocArtifact }}
  DeployALDocArtifact:
    description: Flag determining whether to deploy the ALDoc artifact to GitHub Pages
    value: ${{ steps.determineDeploymentEnvironments.outputs.DeployALDocArtifact }}
runs:
  using: composite
  steps:
    - name: run
      shell: ${{ inputs.shell }}
      id: determineDeploymentEnvironments
      env:
        _getEnvironments: ${{ inputs.getEnvironments }}
        _type: ${{ inputs.type }}
      run: |
        ${{ github.action_path }}/../Invoke-AlGoAction.ps1 -ActionName "DetermineDeploymentEnvironments" -Action {
          ${{ github.action_path }}/DetermineDeploymentEnvironments.ps1 -getEnvironments $ENV:_getEnvironments -type $ENV:_type
        }
branding:
  icon: terminal
  color: blue
