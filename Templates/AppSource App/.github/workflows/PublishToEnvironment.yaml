name: ' Publish To Environment'

on:
  workflow_dispatch:
    inputs:
      appVersion:
        description: App version to deploy to environment(s) (current, prerelease, draft, latest, version number or PR_<PR Id>)
        required: false
        default: 'current'
      environmentName:
        description: Environment mask to receive the new version (* for all, PROD* for all environments starting with PROD)
        required: true

permissions:
  actions: read
  contents: read
  id-token: write
  pull-requests: read
  checks: read

defaults:
  run:
    shell: powershell

env:
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
  Initialization:
    needs: [ ]
    runs-on: [ windows-latest ]
    outputs:
      deploymentEnvironmentsJson: ${{ steps.DetermineDeploymentEnvironments.outputs.DeploymentEnvironmentsJson }}
      deviceCode: ${{ steps.Authenticate.outputs.deviceCode }}
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
    steps:
      - name: Dump Workflow Information
        uses: microsoft/AL-Go-Actions/DumpWorkflowInfo@main
        with:
          shell: powershell

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Initialize the workflow
        id: init
        uses: microsoft/AL-Go-Actions/WorkflowInitialize@main
        with:
          shell: powershell

      - name: Read settings
        id: ReadSettings
        uses: microsoft/AL-Go-Actions/ReadSettings@main
        with:
          shell: powershell

      - name: Determine Deployment Environments
        id: DetermineDeploymentEnvironments
        uses: microsoft/AL-Go-Actions/DetermineDeploymentEnvironments@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: powershell
          getEnvironments: ${{ github.event.inputs.environmentName }}
          type: 'Publish'

      - name: EnvName
        id: envName
        if: steps.DetermineDeploymentEnvironments.outputs.UnknownEnvironment == 1
        run: |
          $errorActionPreference = "Stop"; $ProgressPreference = "SilentlyContinue"; Set-StrictMode -Version 2.0
          $envName = '${{ fromJson(steps.DetermineDeploymentEnvironments.outputs.DeploymentEnvironmentsJson).environments[0].name }}'.split(' ')[0]
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "envName=$envName"

      - name: Read secrets
        id: ReadSecrets
        uses: microsoft/AL-Go-Actions/ReadSecrets@main
        if: steps.DetermineDeploymentEnvironments.outputs.UnknownEnvironment == 1
        with:
          shell: powershell
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: '${{ steps.envName.outputs.envName }}-AuthContext,${{ steps.envName.outputs.envName }}_AuthContext,AuthContext'

      - name: Authenticate
        id: Authenticate
        if: steps.DetermineDeploymentEnvironments.outputs.UnknownEnvironment == 1
        run: |
          $envName = '${{ steps.envName.outputs.envName }}'
          $secretName = ''
          $secrets = '${{ steps.ReadSecrets.outputs.Secrets }}' | ConvertFrom-Json
          $authContext = $null
          "$($envName)-AuthContext", "$($envName)_AuthContext", "AuthContext" | ForEach-Object {
            if (!($authContext)) {
              if ($secrets."$_") {
                Write-Host "Using $_ secret as AuthContext"
                $authContext = $secrets."$_"
                $secretName = $_
              }
            }
          }
          if ($authContext) {
            Write-Host "AuthContext provided in secret $secretName!"
            Add-Content -Encoding UTF8 -path $ENV:GITHUB_STEP_SUMMARY -value "AuthContext was provided in a secret called $secretName. Using this information for authentication."
          }
          else {
            Write-Host "No AuthContext provided for $envName, initiating Device Code flow"
            $ALGoHelperPath = "$([System.IO.Path]::GetTempFileName()).ps1"
            $webClient = New-Object System.Net.WebClient
            $webClient.DownloadFile('https://raw.githubusercontent.com/microsoft/AL-Go-Actions/main/AL-Go-Helper.ps1', $ALGoHelperPath)
            . $ALGoHelperPath
            DownloadAndImportBcContainerHelper
            $authContext = New-BcAuthContext -includeDeviceLogin -deviceLoginTimeout ([TimeSpan]::FromSeconds(0))
            Add-Content -Encoding UTF8 -path $ENV:GITHUB_STEP_SUMMARY -value "AL-Go needs access to the Business Central Environment $('${{ steps.envName.outputs.envName }}'.Split(' ')[0]) and could not locate a secret called ${{ steps.envName.outputs.envName }}_AuthContext`n`n$($authContext.message)"
            Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "deviceCode=$($authContext.deviceCode)"
          }

  Deploy:
    needs: [ Initialization ]
    if: fromJson(needs.Initialization.outputs.deploymentEnvironmentsJson).environmentCount > 0
    strategy:
      matrix:
        include: ${{ fromJson(needs.Initialization.outputs.deploymentEnvironmentsJson).environments }}
      fail-fast: false
    runs-on: ${{ fromJson(matrix.runs-on) }}
    name: Deploy to ${{ matrix.environmentName }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    environment:
      name: ${{ matrix.environmentName }}
      url: ${{ steps.Deploy.outputs.environmentUrl }}
    env:
      deviceCode: ${{ needs.Initialization.outputs.deviceCode }}
      ALGoEnvSettings: ${{ vars.ALGoEnvironmentSettings }}
      ALGoEnvName: ${{ matrix.environmentName }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: EnvName
        id: envName
        run: |
          $errorActionPreference = "Stop"; $ProgressPreference = "SilentlyContinue"; Set-StrictMode -Version 2.0
          $envName = '${{ matrix.environmentName }}'.split(' ')[0]
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "envName=$envName"

      - name: Read settings
        uses: microsoft/AL-Go-Actions/ReadSettings@main
        with:
          shell: ${{ matrix.shell }}
          get: type,powerPlatformSolutionFolder

      - name: Read secrets
        id: ReadSecrets
        uses: microsoft/AL-Go-Actions/ReadSecrets@main
        with:
          shell: ${{ matrix.shell }}
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: '${{ steps.envName.outputs.envName }}-AuthContext,${{ steps.envName.outputs.envName }}_AuthContext,AuthContext'

      - name: Get Artifacts for deployment
        uses: microsoft/AL-Go-Actions/GetArtifactsForDeployment@main
        with:
          shell: ${{ matrix.shell }}
          artifactsVersion: ${{ github.event.inputs.appVersion }}
          artifactsFolder: '.artifacts'

      - name: Deploy to Business Central
        id: Deploy
        uses: microsoft/AL-Go-Actions/Deploy@main
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
        with:
          shell: ${{ matrix.shell }}
          environmentName: ${{ matrix.environmentName }}
          artifactsFolder: '.artifacts'
          type: 'Publish'
          artifactsVersion: ${{ github.event.inputs.appVersion }}

      - name: Deploy to Power Platform
        if: env.type == 'PTE' && env.powerPlatformSolutionFolder != ''
        uses: microsoft/AL-Go-Actions/DeployPowerPlatform@main
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
        with:
          shell: ${{ matrix.shell }}
          environmentName: ${{ matrix.environmentName }}
          artifactsFolder: '.artifacts'

  PostProcess:
    needs: [ Initialization, Deploy ]
    if: always()
    runs-on: [ windows-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Finalize the workflow
        id: PostProcess
        uses: microsoft/AL-Go-Actions/WorkflowPostProcess@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: powershell
          telemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          currentJobContext: ${{ toJson(job) }}
